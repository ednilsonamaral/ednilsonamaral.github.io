I"€8<p>Ol√°! Ol√°! Ol√°! Ol√°! Como √© que voc√™ est√°?</p>

<p>Depois de meses sem postar nada no blog, passando dias e mais dias com a mentalidade <strong>preciso melhorar meu tema e postar mais artigos</strong> todo dia e deixando de lado, 2017 n√£o vai acontecer isso! Em 2017, tracei como <strong>meta</strong> postar no m√≠nimo dois artigos por m√™s, exceto janeiro, que j√° era (rsrsrs), independente da disponibilidade de tempo devido aos trabalhos.</p>

<p>E nada melhor que come√ßar o ‚Äúano‚Äù falando sobre o meu mais novo queridinho, <strong>Vue.js</strong>!!</p>

<h2 id="o-que-√©-vuejs">O que √© Vue.js?</h2>

<p>Primeiramente vamos aprender a pron√∫ncia correta. Fala-se <strong>view</strong> (/vjuÀê/) e n√£o <strong>vue</strong>. Ele foi criado pelo <a href="https://github.com/yyx990803">Evan You</a> em 2014.</p>

<p>O Vue.js √© um framework javascript progressivo, para desenvolvermos interfaces web robustas e complexas. Ele √© baseado em componentes reativos para aplica√ß√µes web modernas. Com ele, como j√° citado, podemos criar aplica√ß√µes web iterativas, complexas e robustas.</p>

<p>Ele n√£o √© considerado um framework full stack, ou seja do back-end ao front-end. Ele √© focado <strong>exclusivamente</strong> para a camada da <strong>view</strong>!</p>

<p>Podemos construir uma aplica√ß√£o complexa facilmente com Vue.js e trabalhar o back-end bem como entendermos, em qualquer stack.</p>

<p>O Vue.js destaca-se entre outros frameworks principalmente pela sua simplicidade e m√©todos de como trabalhar, baseado em componentes e focado apenas na view da sua aplica√ß√£o.</p>

<p>N√£o irei entrar em detalhes do que √© e como ele funciona. Para isso, meu amigo <a href="https://github.com/Halfeld">Igor Luiz</a> e eu estamos desenvolvendo um curso pr√°tico de Vue.js pela Webschool.io e estar√° dispon√≠vel nas pr√≥ximas semanas, ainda nesse m√™s de fevereiro. Ent√£o, voc√™ n√£o conhece Vue.js? Poder√° <strong>estudar de gra√ßa</strong>! Assim que as aulas estiverem dispon√≠veis ao p√∫blico, irei postar um artigo especial aqui no blog! :D</p>

<p>Esse artigo tratar√° apenas de desenvolvimento de componentes b√°sicos com Vue.js. √â necess√°rio ter uma familiriadade b√°sica com Vue.js para dar continuidade na leitura..</p>

<h2 id="o-que-s√£o-componentes-como-pensar-em-componentes">O que s√£o componentes? Como pensar em componentes?</h2>

<p>Tudo s√£o e pode ser um componente(s)! Vejamos a imagem abaixo e vamos analisar com calma.</p>

<p><img src="/assets/img/vue-compoentes.png" alt="Exemplo de Componentes" /></p>

<ol>
  <li>
    <p>O <strong>header</strong>, com o logo e um menu simples √© um <strong>COMPONENTE</strong>. No Vue.js, se formos pensar em modulariza√ß√£o, poderiamos criar mais 2 componentes, 1 para o logotipo e t√≠tulo e mais 1 para o menu ao lado.</p>
  </li>
  <li>
    <p>O <strong>main content</strong>, com o texto e bot√£o √© um <strong>COMPONENTE</strong>. Aqui, tamb√©m poderia dividir em mais 3 componentes: t√≠tulo, texto e bot√£o.</p>
  </li>
  <li>
    <p>O <strong>footer</strong>, com os cr√©ditos do projeto √© um <strong>COMPONENTE</strong>.</p>
  </li>
</ol>

<p>Um simples exemplo de componentes, <strong>tudo pode ser componente, tudo</strong>! No come√ßo pode ser um pouquinho complicado entender esse conceito, mas depois que entender, vai que vai, filh√£o. Trabalhar com componentes no Vue.js ir√° facilitar o desenvolvimento de nossa aplica√ß√£o em 110%. <strong>O Vue.js √© para componentes!</strong></p>

<h2 id="vue-cli">vue-cli</h2>

<p>Nesse projeto, utilizei o template do webpack disponibilizado pelo <strong>vue-cli</strong>.</p>

<p>√â uma ferramenta com o intuito de facilitar a cria√ß√£o de projetos. Respons√°vel por criar alguns templates para projetos em Vue.js.</p>

<p>Para instalar o <strong>vue-cli</strong> basta executar o seguinte comando: <code class="highlighter-rouge">npm install -g vue-cli</code>.</p>

<p>Para visualizar os templates dispon√≠veis basta executar o seguinte comando: <code class="highlighter-rouge">vue list</code>. E para criar um projeto com um template padr√£o do <strong>vue-cli</strong>, basta executar o seguinte comando: <code class="highlighter-rouge">vue init nome_template nome_projeto</code>, por exemplo, <code class="highlighter-rouge">vue init webpack vue-webpack</code>.</p>

<p>Ele ir√° instalar o projeto dividido em v√°rios arquivos e pastas, vamos descobrir o que cada pasta possui e qual √© sua responsabilidade.</p>

<ul>
  <li><code class="highlighter-rouge">build</code>: possui os arquivos de configura√ß√£o que ir√£o fazer o build da aplica√ß√£o;</li>
  <li><code class="highlighter-rouge">dist</code>: ap√≥s realizar <code class="highlighter-rouge">npm run build</code> o webpack ir√° compilar o seu projeto para produ√ß√£o, minificando e concatenando todos os arquivos;</li>
  <li><code class="highlighter-rouge">config</code>: alguns arquivos que precisamos alterar uma coisa ou outra em nosso ambiente;</li>
  <li><code class="highlighter-rouge">src</code>: √© o nosso C√ìDIGO FONTE, onde iremos brincar pra caramba.</li>
</ul>

<h2 id="criando-os-componentes">Criando os componentes</h2>

<p>Para criar um componente em um projeto Vue.js √© muito simples. Basta criarmos um arquivo com o nome do nosso componente, por exemplo <code class="highlighter-rouge">Blog.vue</code> e importarmos ele no componente global ou especifico, ou nas configura√ß√µes da nossa rota. O <code class="highlighter-rouge">Blog.vue</code> possui como c√≥digo:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;template&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;h2&gt;</span>Blog<span class="nt">&lt;/h2&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/template&gt;</span>

<span class="nt">&lt;script&gt;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>

<span class="nt">&lt;style </span><span class="na">scoped</span><span class="nt">&gt;</span>
<span class="nt">h2</span><span class="p">{</span>
  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#c39e88</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">&lt;/style&gt;</span>
</code></pre></div></div>

<p>Onde, dentro das tags:</p>

<ul>
  <li><code class="highlighter-rouge">&lt;template&gt;&lt;/template&gt;</code> ir√° conter o nosso HTML;</li>
  <li><code class="highlighter-rouge">&lt;script&gt;&lt;/script&gt;</code> ir√° conter o nosso Javascript, onde a m√°gica acontece;</li>
  <li><code class="highlighter-rouge">&lt;style&gt;&lt;/style&gt;</code> ir√° conter o nosso CSS. Caso voc√™ declare <em>scoped</em> como no exemplo acima, as declara√ß√µes poder√£o ser utilizadas <strong>apenas</strong> nesse componente.</li>
</ul>

<p>Esse √© o padr√£o para criarmos componentes com Vue.js. Podemos criar quantos componentes quisermos, √† vontade! E, √© f√°cil e simples! ;)</p>

<h2 id="vue-router">vue-router</h2>

<p>Como eu crio as rotas com Vue.js? No Angular.js eu sei fazer, mas e aqui, manolo? Com o <strong>vue-router</strong>!!</p>

<p>J√° sabemos que para desenvolver um projeto em Vue.js √© simples, com <strong>vue-router</strong> √© mais simples ainda! Tamb√©m j√° sabemos que estamos compondo nossa aplica√ß√£o com componentes. Ent√£o, ao adicionarmos o <strong>vue-router</strong> ao nosso projeto, o que precisamos fazer √© mapear os nossos componentes para as suas respectivas rotas e deixar que o <strong>vue-router</strong> identifique onde dever√° rendeliz√°-las.</p>

<p>Para instalar o <strong>vue-router</strong> na nossa aplica√ß√£o, basta executarmos os seguintes comandos: <code class="highlighter-rouge">npm install --save vue-router</code>.</p>

<p>Feito isso, precisamos informar a nossa aplica√ß√£o:</p>

<ul>
  <li>Quais s√£o as rotas;</li>
  <li>Informar ao Vue.js que iremos trabalhar/usar o vue-router;</li>
  <li>Criar as rotas necess√°rias do projeto;</li>
  <li>Chamar as rotas na nossa inst√¢ncia Vue.js.</li>
</ul>

<ol>
  <li>Primeiramente, devemos importar o <strong>vue-router</strong> ao projeto, mais especificamente em <code class="highlighter-rouge">main.js</code>;</li>
  <li>Informamos ao Vue.js que iremos utilizar/trabalhar como <strong>vue-router</strong>;</li>
  <li>Ent√£o, criamos as rotas;</li>
  <li>Por fim, chamamos as rotas na nossa inst√¢ncia Vue.js.</li>
</ol>

<p>Os 4 passos acima, voc√™ pode visualizar com mais calma no c√≥digo abaixo:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Importanto o Vue e vue-router</span>
<span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">VueRouter</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue-router</span><span class="dl">'</span>

<span class="c1">// Importanto os componentes da nossa aplica√ß√£o</span>
<span class="k">import</span> <span class="nx">App</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./App.vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">CcAbout</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./components/About.vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">CcBlog</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./components/Blog.vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">CcContact</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./components/Contact.vue</span><span class="dl">'</span>

<span class="c1">// Informamos ao Vue.js que iremos utilizar/trabalhar como vue-router</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">VueRouter</span><span class="p">)</span>

<span class="c1">// Ent√£o, criamos as rotas</span>
<span class="kd">const</span> <span class="nx">routes</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">path</span><span class="p">:</span> <span class="dl">'</span><span class="s1">/about</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">component</span><span class="p">:</span> <span class="nx">CcAbout</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">path</span><span class="p">:</span> <span class="dl">'</span><span class="s1">/blog</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">component</span><span class="p">:</span> <span class="nx">CcBlog</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">path</span><span class="p">:</span> <span class="dl">'</span><span class="s1">/contact</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">component</span><span class="p">:</span> <span class="nx">CcContact</span>
  <span class="p">}</span>
<span class="p">]</span>

<span class="kd">const</span> <span class="nx">router</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">VueRouter</span><span class="p">({</span> <span class="nx">routes</span> <span class="p">})</span>

<span class="c1">// Por fim, chamamos as rotas na nossa inst√¢ncia Vue.js</span>
<span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
  <span class="nx">router</span><span class="p">,</span> <span class="c1">// Por fim, chamamos as rotas na nossa inst√¢ncia Vue.js</span>
  <span class="c1">// el: '#app',</span>
  <span class="na">render</span><span class="p">:</span> <span class="nx">h</span> <span class="o">=&gt;</span> <span class="nx">h</span><span class="p">(</span><span class="nx">App</span><span class="p">)</span>
<span class="p">}).</span><span class="nx">$mount</span><span class="p">(</span><span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">)</span>
</code></pre></div></div>

<p>Pronto, as nossas rotas est√£o prontas! Apenas com isso a√≠? Sim, s√≥ isso! L√≥gico, se seu projeto possui mais rotas, isso vai aumentar. Mas basicamente √© assim que criamos rotas com <strong>Vue.js</strong> e <strong>vue-router</strong>! Muito f√°cil, n√©?!</p>

<h2 id="build-for-production">Build for production</h2>

<p>Criei os componentes, populei eles com o conte√∫do que gostaria; criei as rotas e mapeei os meus componentes. O que falta agora? Verificar o resultado final e publicar!</p>

<p>Se utilizarmos o webpack com vue-cli, temos um NPM Script chamado <code class="highlighter-rouge">npm run build</code> que ir√° fazer todo o build do seu projeto, minificando e concatenando os arquivos de seu projeto e deix√°-los prontos para colocar em produ√ß√£o. N√£o precisa instalar <strong>NADA</strong> no servidor, basta copiar esses arquivos e j√° era! Ap√≥s o webpack realizar o build, ele ir√° salvar os arquivos necess√°rios na pasta <strong>dist</strong>!</p>

<h2 id="concluindo">Concluindo</h2>

<p>Esse projeto foi apenas um pequeno exemplo de desenvolvimento de componentes com <strong>Vue.js</strong> e <strong>vue-router</strong>. √â muito simples e muito f√°cil. E nada melhor do que praticar desenvolvendo projetos pequenos, entendendo as possibilidades e poderes que temos em m√£os para utilizarmos. Com o passar do tempo, conseguiremos desenvolver projetos mais complexos, com in√∫meros componentes e rotas, com <strong>Vue.js</strong> e <strong>vue-router</strong>.</p>

<p>O artigo foi simples, por√©m espero ter deixado a minha ideia! N√£o quis entrar a fundo com os poderes do vue-router, apenas o b√°sico e essencial, assim bem como o b√°sico e essencial de desenvolver componentes com Vue.js.</p>

<p>Qualquer d√∫vida, sugest√£o, reclama√ß√£o, cr√≠tica, por favor, deixe um coment√°rio abaixo que lhe responderei rapidinho!</p>

<p>Voc√™ tamb√©m pode visualizar o resultado final desse projeto atrav√©s <a href="http://ednilsonamaral.me/vue-components-example/#/">desse link</a> e ver os c√≥digos completos em seu <a href="https://github.com/ednilsonamaral/vue-components-example">reposit√≥rio oficial</a> no GitHub.</p>

<p>Abra√ßos, at√© mais! =D</p>
:ET